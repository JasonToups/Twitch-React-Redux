{"version":3,"sources":["apis/streams.js","actions/types.js","components/GoogleAuth.js","actions/index.js","components/Header.js","components/streams/StreamCreate.js","components/streams/StreamDelete.js","components/streams/StreamEdit.js","components/streams/StreamList.js","components/streams/StreamShow.js","components/App.js","reducers/authReducer.js","reducers/streamReducer.js","reducers/index.js","reportWebVitals.js","index.js"],"names":["axios","create","baseURL","SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAMS","FETCH_STREAM","DELETE_STREAM","EDIT_STREAM","GoogleAuth","onAuthChange","isSignedIn","props","signIn","auth","currentUser","get","getId","signOut","onSignInClick","onSignOutClick","window","gapi","load","client","init","clientId","process","scope","then","auth2","getAuthInstance","listen","this","className","onClick","renderAuthButton","React","Component","connect","state","userId","type","payload","Header","to","StreamCreate","renderInput","input","label","meta","error","touched","autoComplete","renderError","onSubmit","formValues","createStream","handleSubmit","Field","name","component","formWrapped","reduxForm","form","validate","errors","title","description","dispatch","getState","a","streams","post","response","data","StreamDelete","StreamEdit","StreamList","fetchStreams","stream","currentUserId","map","renderAdmin","id","style","textAlign","renderList","renderCreate","Object","values","StreamShow","App","path","exact","INITIAL_STATE","authReducer","action","streamReducer","_","mapKeys","omit","combineReducers","formReducer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c36acffc.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'http://localhost:3001'\n})","// creating these variables help with debugging string errors\n// also the variables will auto-complete in VSCode\nexport const SIGN_IN = 'SIGN_IN';\nexport const SIGN_OUT = 'SIGN_OUT';\nexport const CREATE_STREAM = 'CREATE_STREAM';\nexport const FETCH_STREAMS = 'FETCH_STREAMS';\nexport const FETCH_STREAM = 'FETCH_STREAM';\nexport const DELETE_STREAM = 'DELETE_STREAM';\nexport const EDIT_STREAM = 'EDIT_STREAM';\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../actions';\n\nclass GoogleAuth extends React.Component {\n\n  componentDidMount() {\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client.init({\n        clientId: process.env.REACT_APP_GAPI_KEY_LOCAL,\n        scope: 'email'\n      }).then(() => {\n        this.auth = window.gapi.auth2.getAuthInstance();\n        this.onAuthChange(this.auth.isSignedIn.get());\n        this.auth.isSignedIn.listen(this.onAuthChange);\n      });\n    });\n  }\n\n  onAuthChange = (isSignedIn) => {\n    if (isSignedIn) {\n      this.props.signIn(this.auth.currentUser.get().getId());\n    } else {\n      this.props.signOut();\n    }\n  };\n\n  onSignInClick = () => {\n    this.auth.signIn();\n  };\n  \n  onSignOutClick = () => {\n    this.auth.signOut();\n  };\n\n  renderAuthButton() {\n    if (this.props.isSignedIn === null) {\n      return null;\n    } else if (this.props.isSignedIn) {\n      return (\n        <button \n          className=\"ui red google button\"\n          onClick={this.onSignOutClick}\n        >\n          <i className=\"google icon\" />\n          Sign Out\n        </button>\n      )\n    } else {\n      return (\n        <button \n          className=\"ui red google button\"\n          onClick={this.onSignInClick}\n        >\n          <i className=\"google icon\" />\n          Sign In with Google\n        </button>\n      )\n    }\n  }\n\n  render() {\n    return <div>{this.renderAuthButton()}</div>;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { isSignedIn: state.auth.isSignedIn };\n}\n\nexport default connect(mapStateToProps, { signIn, signOut })(GoogleAuth);","import streams from '../apis/streams';\nimport { \n  SIGN_IN, \n  SIGN_OUT, \n  CREATE_STREAM,\n  FETCH_STREAMS,\n  FETCH_STREAM,\n  DELETE_STREAM,\n  EDIT_STREAM\n} from './types';\n\nexport const signIn = (userId) => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\n\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};\n\nexport const createStream = (formValues) => async (dispatch, getState) => {\n  const { userId } = getState().auth;\n  const response = await streams.post('/streams', { ...formValues, userId});\n\n  dispatch({ type: CREATE_STREAM, payload: response.data });\n};\n\nexport const fetchStreams = () => async dispatch => {\n  const response = await streams.get('/streams');\n\n  dispatch({ type: FETCH_STREAMS, payload: response.data });\n}\n\nexport const fetchStream = (id) => async dispatch => {\n  const response = await streams.get(`/streams/${id}`);\n\n  dispatch({ type: FETCH_STREAM, payload: response.data });\n}\n\nexport const editStream = (id, formValues) => async dispatch => {\n  const response = await streams.put(`/streams/${id}`, formValues);\n\n  dispatch({ type: EDIT_STREAM, payload: response.data });\n}\n\nexport const deleteStream = (id) => async dispatch => {\n  await streams.delete(`/streams/${id}`);\n\n  dispatch({ type: DELETE_STREAM, payload: id });\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport GoogleAuth from './GoogleAuth';\n\nconst Header = () => {\n  return (\n    <div className=\"header ui secondary pointing menu\">\n      <Link to=\"/\" className=\"site-name link item\">\n        Twitch React\n      </Link>\n      <div className=\"menu-right right menu\">\n        <Link to=\"/\" className=\"link item\">\n          All Streams\n        </Link>\n        <GoogleAuth />\n      </div>\n    </div>\n  )\n}\n\nexport default Header;","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { createStream } from '../../actions'\n\nclass StreamCreate extends React.Component {\n  renderError({ error, touched }) {\n    if (touched && error) {\n      return (\n        <div className=\"ui error message field-error\">\n          <div className='header'>{error}</div>\n        </div>\n      )\n    }\n  }\n\n  renderInput = ({input, label, meta}) => {\n    const className = `field ${meta.error && meta.touched ? 'error': ''}`;\n    return (\n      <div className={className}>\n        <label>{label}</label>\n        <input {...input} autoComplete=\"off\" />\n        {this.renderError(meta)}\n      </div>\n    )\n  };\n\n  onSubmit = (formValues) => {\n    this.props.createStream(formValues);\n  };\n  \n  render () {\n    return ( \n    <div className=\"stream-create\">\n      <form \n        onSubmit={this.props.handleSubmit(this.onSubmit)} \n        className=\"ui form error stream-create--form\">\n        <Field \n          name=\"title\" \n          component={this.renderInput} \n          label=\"Enter Title\" \n        />\n        <Field \n          name=\"description\" \n          component={this.renderInput} \n          label=\"Enter Description\" \n        />\n        <button \n          className=\"ui button primary\">\n            Submit\n        </button>\n      </form>\n    </div>\n    )\n  }\n};\n\nconst validate = (formValues) => {\n  const errors = {};\n\n  if (!formValues.title) {\n    errors.title = \"You must enter a title\"\n  }\n  if (!formValues.description) {\n    errors.description = \"You must enter a description\"\n  }\n  return errors;\n}\n\nconst formWrapped = reduxForm({\n  form: 'streamCreate',\n  validate\n})(StreamCreate);\n\nexport default connect(null, { createStream })(formWrapped);","import React from 'react';\n\nconst StreamDelete = () => {\n  return (\n    <div className=\"stream-delete\">\n      StreamDelete\n    </div>\n  )\n};\n\nexport default StreamDelete;","import React from 'react';\n\nconst StreamEdit = () => {\n  return (\n    <div className=\"stream-edit\">\n      StreamEdit\n    </div>\n  )\n};\n\nexport default StreamEdit;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { fetchStreams } from '../../actions';\n\nclass StreamList extends React.Component {\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  renderAdmin(stream) {\n    if (stream.userId === this.props.currentUserId) {\n      return (\n        <div className='right floated content'>\n          <button className='ui button primary'>\n            Edit\n          </button>\n          <button className='ui button negative'>\n            Delete\n          </button>\n        </div>\n      )\n    }\n  }\n\n  renderList() {\n    return this.props.streams.map(stream => {\n      return (\n        <div className='item' key={stream.id}>\n          {this.renderAdmin(stream)}\n          <i className='large middle aligned icon camera' />\n          <div className='content'>\n            {stream.title}\n            <div className='description'>\n              {stream.description}\n            </div>\n          </div>\n        </div>\n      );\n    });\n  }\n\n  renderCreate() {\n    if (this.props.isSignedIn) {\n      return (\n        <div style={{textAlign: 'right'}}>\n          <Link to=\"/streams/new\" className=\"ui button primary\">\n            Create Stream\n          </Link>\n        </div>\n      )\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Streams</h2>\n        <div className=\"ui celled list\">\n          {this.renderList()}\n        </div>\n        {this.renderCreate()}\n      </div>\n    )\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return { \n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, { fetchStreams })(StreamList);","import React from 'react';\n\nconst StreamShow = () => {\n  return (\n    <div className=\"stream-show\">\n      StreamShow\n    </div>\n  )\n};\n\nexport default StreamShow;","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport '../style/app.scss';\nimport Header from './Header';\nimport StreamCreate from './streams/StreamCreate';\nimport StreamDelete from './streams/StreamDelete';\nimport StreamEdit from './streams/StreamEdit';\nimport StreamList from './streams/StreamList';\nimport StreamShow from './streams/StreamShow';\n\nconst App = () => {\n\n\treturn (\n    <div className=\"app ui container\">\n      <BrowserRouter>\n        <Header />\n        <div className=\"pages\">\n          <Route path=\"/\" exact component={StreamList} />\n          <Route path=\"/streams/new\" exact component={StreamCreate} />\n          <Route path=\"/streams/edit\" exact component={StreamEdit} />\n          <Route path=\"/streams/delete\" exact component={StreamDelete} />\n          <Route path=\"/streams/show\" exact component={StreamShow} />\n        </div>\n      </BrowserRouter>\n    </div>\n\t);\n};\n\nexport default App;\n","import { SIGN_IN, SIGN_OUT } from \"../actions/types\";\n\nconst INITIAL_STATE = {\n  isSignedIn: null,\n  userId: null\n};\n\nconst authReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SIGN_IN:\n      return { ...state, isSignedIn: true, userId: action.payload };\n    case SIGN_OUT:\n      return { ...state, isSignedIn: false, userId: null };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;","import _ from 'lodash';\nimport {\n  FETCH_STREAMS,\n  FETCH_STREAM,\n  CREATE_STREAM,\n  DELETE_STREAM,\n  EDIT_STREAM\n} from '../actions/types';\n\nconst streamReducer = (state = {}, action) => {\n  switch (action.type) {\n    case FETCH_STREAMS:\n      return {...state, ..._.mapKeys(action.payload, 'id') };\n    case FETCH_STREAM:\n      return {...state, [action.payload.id]: action.payload };\n    case CREATE_STREAM:\n      return {...state, [action.payload.id]: action.payload };\n    case EDIT_STREAM:\n      return {...state, [action.payload.id]: action.payload };\n    case DELETE_STREAM:\n      return _.omit(state, action.payload);\n    default:\n      return state;\n  }\n}\n\nexport default streamReducer;","import { combineReducers } from \"redux\";\nimport { reducer as formReducer } from 'redux-form';\nimport authReducer from \"./authReducer\";\nimport streamReducer from \"./streamReducer\";\n\nexport default combineReducers({\n  auth: authReducer,\n  form: formReducer,\n  streams: streamReducer\n});","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux'; \nimport reduxThunk from 'redux-thunk';\nimport './style/app.scss';\n\nimport App from './components/App';\nimport reducers from './reducers';\nimport reportWebVitals from './reportWebVitals';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}