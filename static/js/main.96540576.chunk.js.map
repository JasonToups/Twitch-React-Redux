{"version":3,"sources":["actions/types.js","components/GoogleAuth.js","actions/index.js","components/Header.js","components/streams/StreamCreate.js","components/streams/StreamDelete.js","components/streams/StreamEdit.js","components/streams/StreamList.js","components/streams/StreamShow.js","components/App.js","reducers/authReducer.js","reducers/index.js","reportWebVitals.js","index.js"],"names":["SIGN_IN","SIGN_OUT","GoogleAuth","onAuthChange","isSignedIn","props","signIn","auth","currentUser","get","getId","signOut","onSignInClick","onSignOutClick","window","gapi","load","client","init","clientId","process","scope","then","auth2","getAuthInstance","listen","this","className","onClick","renderAuthButton","React","Component","connect","state","userId","type","payload","Header","to","StreamCreate","StreamDelete","StreamEdit","StreamList","StreamShow","App","path","exact","component","INITIAL_STATE","authReducer","action","combineReducers","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","reducers","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96540576.chunk.js","sourcesContent":["// creating these variables help with debugging string errors\n// also the variables will auto-complete in VSCode\nexport const SIGN_IN = 'SIGN_IN';\nexport const SIGN_OUT = 'SIGN_OUT';\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../actions';\n\nclass GoogleAuth extends React.Component {\n\n  componentDidMount() {\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client.init({\n        clientId: process.env.REACT_APP_GAPI_KEY_LOCAL,\n        scope: 'email'\n      }).then(() => {\n        this.auth = window.gapi.auth2.getAuthInstance();\n        this.onAuthChange(this.auth.isSignedIn.get());\n        this.auth.isSignedIn.listen(this.onAuthChange);\n      });\n    });\n  }\n\n  onAuthChange = (isSignedIn) => {\n    if (isSignedIn) {\n      this.props.signIn(this.auth.currentUser.get().getId());\n    } else {\n      this.props.signOut();\n    }\n  };\n\n  onSignInClick = () => {\n    this.auth.signIn();\n  };\n  \n  onSignOutClick = () => {\n    this.auth.signOut();\n  };\n\n  renderAuthButton() {\n    if (this.props.isSignedIn === null) {\n      return null;\n    } else if (this.props.isSignedIn) {\n      return (\n        <button \n          className=\"ui red google button\"\n          onClick={this.onSignOutClick}\n        >\n          <i className=\"google icon\" />\n          Sign Out\n        </button>\n      )\n    } else {\n      return (\n        <button \n          className=\"ui red google button\"\n          onClick={this.onSignInClick}\n        >\n          <i className=\"google icon\" />\n          Sign In with Google\n        </button>\n      )\n    }\n  }\n\n  render() {\n    return <div>{this.renderAuthButton()}</div>;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { isSignedIn: state.auth.isSignedIn };\n}\n\nexport default connect(mapStateToProps, { signIn, signOut })(GoogleAuth);","import { SIGN_IN, SIGN_OUT } from \"./types\";\n\nexport const signIn = (userId) => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\n\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport GoogleAuth from './GoogleAuth';\n\nconst Header = () => {\n  return (\n    <div className=\"header ui secondary pointing menu\">\n      <Link to=\"/\" className=\"site-name link item\">\n        Streamy\n      </Link>\n      <div className=\"menu-right right menu\">\n        <Link to=\"/\" className=\"link item\">\n          All Streams\n        </Link>\n        <GoogleAuth />\n      </div>\n    </div>\n  )\n}\n\nexport default Header;","import React from 'react';\n\nconst StreamCreate = () => {\n  return (\n    <div className=\"stream-create\">\n      StreamCreate\n    </div>\n  )\n};\n\nexport default StreamCreate;","import React from 'react';\n\nconst StreamDelete = () => {\n  return (\n    <div className=\"stream-delete\">\n      StreamDelete\n    </div>\n  )\n};\n\nexport default StreamDelete;","import React from 'react';\n\nconst StreamEdit = () => {\n  return (\n    <div className=\"stream-edit\">\n      StreamEdit\n    </div>\n  )\n};\n\nexport default StreamEdit;","import React from 'react';\n\nconst StreamList = () => {\n  return (\n    <div className=\"stream-list\">\n      Streamlist\n    </div>\n  )\n};\n\nexport default StreamList;","import React from 'react';\n\nconst StreamShow = () => {\n  return (\n    <div className=\"stream-show\">\n      StreamShow\n    </div>\n  )\n};\n\nexport default StreamShow;","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport '../style/app.scss';\nimport Header from './Header';\nimport StreamCreate from './streams/StreamCreate';\nimport StreamDelete from './streams/StreamDelete';\nimport StreamEdit from './streams/StreamEdit';\nimport StreamList from './streams/StreamList';\nimport StreamShow from './streams/StreamShow';\n\nconst App = () => {\n\n\treturn (\n    <div className=\"app ui container\">\n      <BrowserRouter>\n        <Header />\n        <div className=\"pages\">\n          <Route path=\"/\" exact component={StreamList} />\n          <Route path=\"/streams/new\" exact component={StreamCreate} />\n          <Route path=\"/streams/edit\" exact component={StreamEdit} />\n          <Route path=\"/streams/delete\" exact component={StreamDelete} />\n          <Route path=\"/streams/show\" exact component={StreamShow} />\n        </div>\n      </BrowserRouter>\n    </div>\n\t);\n};\n\nexport default App;\n","import { SIGN_IN, SIGN_OUT } from \"../actions/types\";\n\nconst INITIAL_STATE = {\n  isSignedIn: null,\n  userId: null\n};\n\nconst authReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SIGN_IN:\n      return { ...state, isSignedIn: true, userId: action.payload };\n    case SIGN_OUT:\n      return { ...state, isSignedIn: false, userId: null };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducer\";\n\nexport default combineReducers({\n  auth: authReducer\n});","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux'; \nimport './style/app.scss';\nimport App from './components/App';\nimport reducers from './reducers';\nimport reportWebVitals from './reportWebVitals';\n\nconst store = createStore(reducers);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}